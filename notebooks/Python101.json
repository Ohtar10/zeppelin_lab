{"paragraphs":[{"text":"%md\n# Introducción a Python\n![Python](http://i0.wp.com/itpings.com/wp-content/uploads/2014/08/Python.png?fit=256%2C256 \"Python\")\nCreado por Guido van Rossum, Python es un lenguage de alto nivel de propósito general que ademas tiene capacidades para programación funcional, es ampliamente usado en multiples campos de las ciencias de la computación entre ellos la ciencia de datos debido a que es fácil de entender, ligero en la sintáxis y en cierto modo bastante expresivo; es posible lograr grandes cosas con solo pocas lineas de código, adicional a esto al ser un lenguaje interpretado, solo requiere los scripts o comandos a ejecutar, no require compilación ni empaquedado, lo cual lo hace atractivo para crear programas rapidamente.\n\nAdemás, actualmente hay un fuerte soporte a traves de librerias de terceros para el análisis de datos, esto facilita enormemente su uso para la ciencia de datos.\n\nEste notebook, servira como referencia rápida a algunas características del lenguaje que serán usadas durante el taller de ciencia de datos.\n","user":"user1","dateUpdated":"2017-11-23T13:45:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Introducción a Python</h1>\n<p><img src=\"http://i0.wp.com/itpings.com/wp-content/uploads/2014/08/Python.png?fit=256%2C256\" alt=\"Python\" title=\"Python\" /><br/>Creado por Guido van Rossum, Python es un lenguage de alto nivel de propósito general que ademas tiene capacidades para programación funcional, es ampliamente usado en multiples campos de las ciencias de la computación entre ellos la ciencia de datos debido a que es fácil de entender, ligero en la sintáxis y en cierto modo bastante expresivo; es posible lograr grandes cosas con solo pocas lineas de código, adicional a esto al ser un lenguaje interpretado, solo requiere los scripts o comandos a ejecutar, no require compilación ni empaquedado, lo cual lo hace atractivo para crear programas rapidamente.</p>\n<p>Además, actualmente hay un fuerte soporte a traves de librerias de terceros para el análisis de datos, esto facilita enormemente su uso para la ciencia de datos.</p>\n<p>Este notebook, servira como referencia rápida a algunas características del lenguaje que serán usadas durante el taller de ciencia de datos.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511443673597_-1214368295","id":"20171123-132753_1747758333","dateCreated":"2017-11-23T13:27:53+0000","dateStarted":"2017-11-23T13:42:46+0000","dateFinished":"2017-11-23T13:42:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:437"},{"text":"%md\n## Variables y tipos\nComo cualquier otro lenguage, hay manejo de variables, pero la particularidad con python es que no hay que declarar explicitamente el tipo pues este es inferido al momento de correr el programa y que tampoco hay que adicionar ninguna palabra al hacerlo:\n","user":"user1","dateUpdated":"2017-11-23T13:45:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Variables y tipos</h2>\n<p>Como cualquier otro lenguage, hay manejo de variables, pero la particularidad con python es que no hay que declarar explicitamente el tipo pues este es inferido al momento de correr el programa y que tampoco hay que adicionar ninguna palabra al hacerlo:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511443990411_1467222625","id":"20171123-133310_1795234723","dateCreated":"2017-11-23T13:33:10+0000","dateStarted":"2017-11-23T13:44:54+0000","dateFinished":"2017-11-23T13:44:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:438"},{"text":"%python\n\nvar1 = 10\nvar2 = 12.0\nvar3 = \"Hello World\"\nvar4 = True\n\nprint \" var1: %d \\n var2: %f \\n var3: %s \\n var4: %r\" % (var1, var2, var3, var4)\nprint \"#\" * 20\nprint \" var1 es: %s\" % type(var1)\nprint \" var2 es: %s\" % type(var2)\nprint \" var3 es: %s\" % type(var3)\nprint \" var4 es: %s\" % type(var4)\n","user":"user1","dateUpdated":"2017-11-23T13:51:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":" var1: 10 \n var2: 12.000000 \n var3: Hello World \n var4: True\n####################\n var1 es: <type 'int'>\n var2 es: <type 'float'>\n var3 es: <type 'str'>\n var4 es: <type 'bool'>\n"}]},"apps":[],"jobName":"paragraph_1511444694338_-1103071882","id":"20171123-134454_270785880","dateCreated":"2017-11-23T13:44:54+0000","dateStarted":"2017-11-23T13:51:06+0000","dateFinished":"2017-11-23T13:51:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:439"},{"text":"%md\n## Los espacios son importantes\nEn Python, no hay llaves ({}) o punto y comas (;) para distinguir bloques y sentencias, la forma de distinguirlos es mediante los espacios y el sangrado (indentation) entre las lineas de código.\n\nPor ejemplo, si queremos definir una función, utilizaremos la palabra reservada **def** seguido del nombre, luego dos puntos (:) y a partir de la segunda línea, con un sangrado dado por espacios o tabulaciones se define el cuerpo del método:","user":"user1","dateUpdated":"2017-11-23T13:57:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Los espacios son importantes</h2>\n<p>En Python, no hay llaves ({}) o punto y comas (;) para distinguir bloques y sentencias, la forma de distinguirlos es mediante los espacios y el sangrado (indentation) entre las lineas de código.</p>\n<p>Por ejemplo, si queremos definir una función, utilizaremos la palabra reservada <strong>def</strong> seguido del nombre, luego dos puntos (:) y a partir de la segunda línea, con un sangrado dado por espacios o tabulaciones se define el cuerpo del método:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511444814965_-1521370034","id":"20171123-134654_1077910995","dateCreated":"2017-11-23T13:46:54+0000","dateStarted":"2017-11-23T13:57:54+0000","dateFinished":"2017-11-23T13:57:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:440"},{"text":"%python\n\ndef saludar(nombre):\n    #Este sangrado indica que este es el cuerpo del método\n    print \"Hola %s\" % nombre\n#Nótese que esta linea regresa al sangrado anterior lo cual indica que ya no hace parte del cuerpo del método\nsaludar('Pepe')\n","user":"user1","dateUpdated":"2017-11-23T14:03:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Hola Pepe\n"}]},"apps":[],"jobName":"paragraph_1511445331770_1700467994","id":"20171123-135531_2003331390","dateCreated":"2017-11-23T13:55:31+0000","dateStarted":"2017-11-23T14:03:19+0000","dateFinished":"2017-11-23T14:03:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:441"},{"text":"%md\n## Listas, Conjuntos y Diccionarios\nEn cuanto a colecciones, python maneja:\n\n* Listas (List) las cuales siguen un orden especifico, admiten duplicados y son mutables.\n* Conjuntos (Set) los cuales no tienen un orden especifico y no admiten duplicados.\n* Túplas (tuple) las cuales son inmutables, tienen un orden especifico y admiten duplicados.\n* Diccionarios (Dict) que en otros lenguages son conocidos como mapas, es decir colecciones de tipo llave valor, las llaves no pueden ser duplicadas\n \n","user":"user1","dateUpdated":"2017-11-24T16:08:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Listas, Conjuntos y Diccionarios</h2>\n<p>En cuanto a colecciones, python maneja:</p>\n<ul>\n  <li>Listas (List) las cuales siguen un orden especifico, admiten duplicados y son mutables.</li>\n  <li>Conjuntos (Set) los cuales no tienen un orden especifico y no admiten duplicados.</li>\n  <li>Túplas (tuple) las cuales son inmutables, tienen un orden especifico y admiten duplicados.</li>\n  <li>Diccionarios (Dict) que en otros lenguages son conocidos como mapas, es decir colecciones de tipo llave valor, las llaves no pueden ser duplicadas</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1511445567510_997084063","id":"20171123-135927_875615775","dateCreated":"2017-11-23T13:59:27+0000","dateStarted":"2017-11-24T16:08:15+0000","dateFinished":"2017-11-24T16:08:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:442"},{"text":"%python\n\n# Las listas se inicializan entre corchetes, pueden contener cualquier elemento, no necesariamente tienen que ser del mismo tipo\nlista = [1, 2, 3, 'Hola', 'Mundo']\n# Los conjuntos se inicializan invocando al método set() dando como argumento una lista\nconjunto = set([1, 2, 3, 'Hola', 'Mundo'])\n# Las tuplas se inicializan dando los valores entre parentesis\ntupla = (1, 2, 3, 'Hola', 'Mundo')\n# Los diccionarios se inicializan entre llaves y cada llave esta al lado izquierdo, seguido de dos puntos : y luego el valor que le corresponde,\ndiccionarios = {'hello': 10, 'world': 15}\n","user":"user1","dateUpdated":"2017-11-23T15:42:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1511451094982_1743402743","id":"20171123-153134_412259020","dateCreated":"2017-11-23T15:31:34+0000","dateStarted":"2017-11-23T15:42:49+0000","dateFinished":"2017-11-23T15:42:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:443"},{"text":"%md\nPodemos acceder a los elementos de una lista a través de su índice posicional\n","user":"user1","dateUpdated":"2017-11-23T15:43:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Podemos acceder a los elementos de una lista a través de su índice posicional</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511451769339_927901996","id":"20171123-154249_371432621","dateCreated":"2017-11-23T15:42:49+0000","dateStarted":"2017-11-23T15:43:30+0000","dateFinished":"2017-11-23T15:43:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:444"},{"text":"%python\n\nprint \"El elemento en la posición 2 es: %s\" % lista[2]\nprint \"E incluso accederlas de atrás a adelante, entonces el elemento en la posición -2 es: %s\" % lista[-2]\nprint \"También podemos obtener porciones (slices) de una lista si especificamos la posición de origen y la posición de fin\"\nprint \"Entonces, la sub lista entre las posiciones 1 y 4 es: %s\" % lista[1:4]\n","user":"user1","dateUpdated":"2017-11-23T15:48:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"El elemento en la posición 2 es: 3\nE incluso accederlas de atrás a adelante, entonces el elemento en la posición -2 es: Hola\nTambién podemos obtener porciones (slices) de una lista si especificamos la posición de origen y la posición de fin\nEntonces, la sub lista entre las posiciones 1 y 4 es: [2, 3, 'Hola']\n"}]},"apps":[],"jobName":"paragraph_1511451810214_1403279782","id":"20171123-154330_309317147","dateCreated":"2017-11-23T15:43:30+0000","dateStarted":"2017-11-23T15:48:14+0000","dateFinished":"2017-11-23T15:48:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:445"},{"text":"%md\nPara los sets, como son conjuntos no ordenados, solo se podrían iterar.\nPara las tuplas, tambien es posible acceder a través de su índice\n","user":"user1","dateUpdated":"2017-11-23T15:52:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Para los sets, como son conjuntos no ordenados, solo se podrían iterar.<br/>Para las tuplas, tambien es posible acceder a través de su índice</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511451853228_489393875","id":"20171123-154413_1578976562","dateCreated":"2017-11-23T15:44:13+0000","dateStarted":"2017-11-23T15:52:27+0000","dateFinished":"2017-11-23T15:52:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:446"},{"text":"%python\nprint \"El elemento 4 de la tupla es: %s\" % tupla[4]\n","user":"user1","dateUpdated":"2017-11-23T15:53:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"El elemento 4 de la tupla es: Mundo\n"}]},"apps":[],"jobName":"paragraph_1511452347496_1112203297","id":"20171123-155227_397451773","dateCreated":"2017-11-23T15:52:27+0000","dateStarted":"2017-11-23T15:53:31+0000","dateFinished":"2017-11-23T15:53:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:447"},{"text":"%md\nPara los diccionarios, se utiliza la llave para acceder al valor:\n","user":"user1","dateUpdated":"2017-11-23T15:54:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Para los diccionarios, se utiliza la llave para acceder al valor:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511452411384_-76762749","id":"20171123-155331_870044004","dateCreated":"2017-11-23T15:53:31+0000","dateStarted":"2017-11-23T15:54:32+0000","dateFinished":"2017-11-23T15:54:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:448"},{"text":"%python\n\nprint \"El valor de la llave 'hello' es: %s\" % diccionarios['hello']\n","user":"user1","dateUpdated":"2017-11-23T15:55:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"El valor de la llave 'hello' es: 10\n"}]},"apps":[],"jobName":"paragraph_1511452472023_-86103992","id":"20171123-155432_335045658","dateCreated":"2017-11-23T15:54:32+0000","dateStarted":"2017-11-23T15:55:17+0000","dateFinished":"2017-11-23T15:55:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:449"},{"text":"%md\n## Ciclos\nPython ofrece dos tipos de ciclos, for loops y while loops, siendo el primero el mas utilizado y el que servira en la gran mayoria de los casos\n","user":"user1","dateUpdated":"2017-11-23T15:56:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Ciclos</h2>\n<p>Python ofrece dos tipos de ciclos, for loops y while loops, siendo el primero el mas utilizado y el que servira en la gran mayoria de los casos</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511452507335_776164266","id":"20171123-155507_1093824487","dateCreated":"2017-11-23T15:55:07+0000","dateStarted":"2017-11-23T15:56:35+0000","dateFinished":"2017-11-23T15:56:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:450"},{"text":"%python\n\nlista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nfor i in lista:\n    print i,\n    \nprint '\\n'\nprint '#' * 20\n\nn = 10\nwhile n > 0:\n    print n,\n    n -=1\n\n","user":"user1","dateUpdated":"2017-11-23T16:05:57+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1 2 3 4 5 6 7 8 9 10 \n\n####################\n10 9 8 7 6 5 4 3 2 1"}]},"apps":[],"jobName":"paragraph_1511452595424_1885885718","id":"20171123-155635_1718460095","dateCreated":"2017-11-23T15:56:35+0000","dateStarted":"2017-11-23T16:05:57+0000","dateFinished":"2017-11-23T16:05:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:451"},{"text":"%md\n## Funciones\nComo ya observamos, la declaración de una función es de una forma muy particular, ahora en cuanto a lo que puede recibir como argumento, puede recibir cualquier cosa, incluso otra función:\n","user":"user1","dateUpdated":"2017-11-23T16:08:34+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Funciones</h2>\n<p>Como ya observamos, la declaración de una función es de una forma muy particular, ahora en cuanto a lo que puede recibir como argumento, puede recibir cualquier cosa, incluso otra función:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511452707062_-1898719002","id":"20171123-155827_167296841","dateCreated":"2017-11-23T15:58:27+0000","dateStarted":"2017-11-23T16:08:34+0000","dateFinished":"2017-11-23T16:08:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:452"},{"text":"%python\n\ndef aplicar(f, x):\n    return f(x)\n\ndef cuadrado(x):\n    return x * x\n\nprint 'Si aplicamos cuadrado a 4, obtendremos: %d' % aplicar(cuadrado, 4)\n","user":"user1","dateUpdated":"2017-11-23T16:10:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":" Si aplicamos cuadrado a 4, obtendremos: 16\n"}]},"apps":[],"jobName":"paragraph_1511453314071_147068045","id":"20171123-160834_344928044","dateCreated":"2017-11-23T16:08:34+0000","dateStarted":"2017-11-23T16:10:51+0000","dateFinished":"2017-11-23T16:10:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:453"},{"text":"%md\nEsto puede reducirse incluso mas con ayuda de expresiones anónimas:\n","user":"user1","dateUpdated":"2017-11-23T16:12:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Esto puede reducirse incluso mas con ayuda de expresiones anónimas:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511453443307_-1601848858","id":"20171123-161043_547595112","dateCreated":"2017-11-23T16:10:43+0000","dateStarted":"2017-11-23T16:12:12+0000","dateFinished":"2017-11-23T16:12:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:454"},{"text":"%python\n\nprint 'Si aplicamos cuadrado a 5, obtendremos: %d' % aplicar(lambda x: x*x, 5)\n","user":"user1","dateUpdated":"2017-11-23T16:15:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Si aplicamos cuadrado a 5, obtendremos: 25\n"}]},"apps":[],"jobName":"paragraph_1511453532022_-1941274009","id":"20171123-161212_902142920","dateCreated":"2017-11-23T16:12:12+0000","dateStarted":"2017-11-23T16:15:15+0000","dateFinished":"2017-11-23T16:15:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:455"},{"text":"%md\n## Importar modulos\nMuchos problemas de computación ya han sido resueltos o se han creado herramientas para facilitar el resolverlos, estas soluciones se distribuyen como librerias adicionales que podemos comodamente importar en nuestros scripts para ayudarnos.\n","user":"user1","dateUpdated":"2017-11-23T16:21:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Importar modulos</h2>\n<p>Muchos problemas de computación ya han sido resueltos o se han creado herramientas para facilitar el resolverlos, estas soluciones se distribuyen como librerias adicionales que podemos comodamente importar en nuestros scripts para ayudarnos.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511453715810_-1693436065","id":"20171123-161515_933959229","dateCreated":"2017-11-23T16:15:15+0000","dateStarted":"2017-11-23T16:21:26+0000","dateFinished":"2017-11-23T16:21:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:456"},{"text":"%python\n# La libreria numpy ofrece muchas funcionalidades utiles para la manipulacion de colecciones y recopilaciones estadísticas\n# Podemos importarla con el comando 'import' e incluso podemos darle un alias para usarla con un nombre mas corto\nimport numpy as np\n\nA = np.random.normal(25.0, 5.0, 10)\nprint A","user":"user1","dateUpdated":"2017-11-23T16:24:21+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[ 28.16073504  19.02036558  19.79406342  20.15853068  15.20857276\n  17.24765489  36.60517946  20.98267845  24.27149626  27.45590891]\n"}]},"apps":[],"jobName":"paragraph_1511454086678_816049503","id":"20171123-162126_1023779571","dateCreated":"2017-11-23T16:21:26+0000","dateStarted":"2017-11-23T16:24:21+0000","dateFinished":"2017-11-23T16:24:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:457"},{"text":"%md\n","user":"user1","dateUpdated":"2017-11-24T16:16:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511454261429_888038063","id":"20171123-162421_199004067","dateCreated":"2017-11-23T16:24:21+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:458"}],"name":"PSL_DS_Training/python","id":"2CYV5KGVY","angularObjects":{"2CYTRGJ4C:shared_process":[],"2CY4ANXKH:shared_process":[],"2D1FAAA2W:shared_process":[],"2D18CBQ4R:shared_process":[],"2CXFBX3H1::2CYV5KGVY":[],"2CYWNE1SK:shared_process":[],"2CZ53PD9E:shared_process":[],"2CXMSYMKE:shared_process":[],"2CYXNMRRW:shared_process":[],"2CYC381B1:shared_process":[],"2CYUNTTZY:shared_process":[],"2CYM4X6U4:shared_process":[],"2CXY1FUQK:shared_process":[],"2CY6ZF1J1:shared_process":[],"2CX82UF88:shared_process":[],"2CXNTVNX9:shared_process":[],"2CZHUJN1A:shared_process":[],"2CZSSYREP:shared_process":[],"2CYABBU1U:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}